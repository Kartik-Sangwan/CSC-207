#########
# Step 1
Code affected: none
Created this file.
#########
# Step 2
Code affected: all .java files
Reformatted using the Google Java style formatter.
#########
# Step 3
Code affected: Fish.turnAround
Flaw: unnecessary if, leading to duplicate code.
Fix: replaced if statement with a single assignment statement.
#########
# Step 4
Code affected: Seaweed,draw
Flaw: unnecessary conditions and not well structured if's and for loop.
Fix: replaced and combined some if statements
Fix: for loop formatted.
#########
# Step 5
Code affected: Seaweed,draw,drawString,setLocation,wave
Flaw: the access modifiers of the class and methods were public (too broad) - not required
Fix: narrowed down the accessibility to package private(ie default)
Fix: made drawString private as it doesn't need to be accessed from outside the class to draw a -
seaweed
#########
# Step 6
Code affected: Seaweed
Flaw: instance variables defined at the end of the class.
Flaw: instance variables accessibility too broad.
Fix: instance variables moved to the beginning of the class.
Fix: all instance variables made private.
#########
# Step 7
Code affected: Bubble,draw
Flaw: parameters were passed in wrong order.
Fix: x,y passed in corresponding to the function header drawString
#########
# Step 8
Code affected: Bubble,setLocation,drawString,draw,floatStraightUp,floatLeftUp,floatRightUp
Flaw: the access modifiers of the class, methods and variables were public (too broad) - not required
Fix: narrowed down the accessibility to package private(ie default)
Fix: instnace variables made private
#########
# Step 9
Code affected: Bubble,floatStraightUp
Flaw: redundant statement x=x
Fix: removed the statement
#########
# Step 10
Code affected: Bubble,getD()
Flaw: no getter available for instance varibale d which is used in fishTankManager
Fix: added a getter for d
#########
# Step 11
Code affected: Bubble,setD()
Flaw: no setter available for instance varibale d which is used in fishTankManager
Fix: added a setter for d
#########
# Step 12
Code affected: FishTankManager,update
Flaw: accessing private variables of bubble
Fix: getter and setter used to get and set the values of the variables.
#########
# Step 13
Code affected: FishTankManager,update,draw,createTankItems
Flaw: the access modifiers of the class, methods and variables were public (too broad)-not required
Fix: narrowed down the accessibility to package private(ie default)
#########
# Step 14
Code affected: Fish,blowBubble,setLocation,turnAround,draw,drawString
Flaw: the access modifiers of the class, methods and variables were public (too broad)-not required
Fix: narrowed down the accessibility to package private(ie default)
Fix: However made drawString private as it is specific to fish class only.
#########
# Step 15
Code affected: Fish,constructor
Flaw: Hungry fish class is almost a copy of fish class hence we add inheritance for which a
parametrised constructor is needed as a hungryfish has different appearance from fish.
Fix:Parametrised Constructor added to fish class.
#########
# Step 16
Code affected: Fish,reverseAppearance
Flaw: unnecessary string concatenation inside for loop.
Fix: Used String.concat() instead and minor change in default case.
#########
# Step 17
Code affected: HungryFish class
Flaw: Lots of redundant code and functions in HungryFish that have already been implemented in
class Fish.
Fix: Implemented inheritance and made hungryFish a subclass of Fish.
#########
# Step 18
Code affected: HungryFish,reverseAppearance
Flaw: unnecessary string concatenation inside for loop.
Fix: Used String.concat() instead and minor change in default case.
#########
# Step 19
Code affected: FishTankManager,update,draw,createTankItems
Flaw: Inefficient use of 2-D array and for loops to store the objects in the fish tank.
Fix: Used ArrayLists for easier storage and accessibility of objects in the tank.
#########
# Step 20
Code affected: Creatures.
Flaw: Redundant code in class Fish, Bubble, HungryFish and seaweed.
Fix: Created a new super class Creatures for all the fish tank items and made them its subclasses.
#########
# Step 21
Code affected: FishTankManager,createTankItems
Flaw: the constructor was update for the item hence it needs to be adapted to incorporate the
inheritance changes.
Fix: Passed the relevant parameters while creating Fish,HungryFish,Bubble,Seaweed
#########
# Step 22
Code affected: Bubble class
Flaw:Redundant code in class Bubble.
Fix: removed the extra instance variables and methods and updated the constructor.
#########
# Step 23
Code affected: Bubble class
Flaw: draw and drawString can be inherited from creatures hence they are not needed. Also redundant
initialisation of d.
Fix: deleted draw and drawString and instance variable d initialised only once.
#########
# Step 24
Code affected: HungryFish,reverse appearance,turnAround
Flaw:Both methods already implemented in class Fish thus this is redundant.
Fix: Removed both the methods from HungryFish and extended HungryFish as a subclass of Fish.
#########
# Step 25
Code affected: Fish,reverseAppearance
Flaw: Method cant distinguish between a Fish and a HungryFish so as to implement the method slightly
differently.
Fix: added a instnaceof check in the method so that output can be printed on screen differently
for Fish and HungryFish.
#########
# Step 26
Code affected: Fish, move
Flaw: Fishes are going outside the boundary of the fish tank.
Fix: passed in two parameters for the screen width and height to move method from the
FishTankManager and will solve the problem in next step.
#########
# Step 27
Code affected: Bubble, Float methods
Flaw: Very similar and redundant code in the the 3 float methods.
Fix: Created an equivalent single method called Float() for bubble that handles all the
functionality.
#########
# Step 28
Code affected: all the classes constructors
Flaw: myLittleFishies was static so it might have created problems if we had two fish tanks.
Fix: Passed an object of FishTankManager as the parameter to all the creatures constructors.Hence to
incorporate this little change in all the classes.
#########
# Step N-1
Code affected: Fish, move
Flaw: Fishes are going outside the boundary of the tank.
Fix: Added if condition checks in order to check when the fish bumps into the wall of the tank and
then the fish reverses its path and appearance.
#########
# Step N-1
Code affected: FishTankManager, update
Flaw: Bubbles were going outside the screen and still staying in the data list hence occupying
extra memory that can be freed up.
Fix: Removed the bubbles from the list once they go outside the screen. Also made myLittleFishies
private as it is not required anywhere else.
#########
# Step N
Code affected: Class Predator Created
Reason: Created a Predator fish that interacts with the other fishes in the tank and eats them
if they are close enough.
#########
# Step N + 1
Code affected: All classes
Flaw: Code Smells: In a lot of places like Seaweed and Fish there are comments which just repeat
what is already coded clearly and which can be easily understood.
Fix: Removed Unnecessary comments throughout the code.